---
import type { Skills } from "@/components/ui/Skills.astro";

interface Props {
  listTitle: string;
  listItems: {
    title: string;
    description: string;
    highlight: string;
    skills: Skills[];
  }[];
}

const { listTitle, listItems } = Astro.props;
---

<h2 class="text-2xl font-bold mb-6">{listTitle}</h2>
<div class="grid gap-6 mb-12">
  {listItems.map((item) => (
    <div class="p-6 bg-base-200 rounded-xl text-base-content">
      {/* Title */}
      <h3 class="text-xl font-semibold mb-3">{item.title}</h3>
      
      {/* Description */}
      <p class="mb-3">
        {item.description}
        <span class="mb-3 text-amber-700 font-semibold">{item.highlight}</span>
      </p>
      

      {/* Skills */}
      {item.skills?.length > 0 && (
        <div class="flex flex-wrap gap-2">
          {item.skills.map(({ name, icon, iconColor, description }) => {
            const className = 'inline-flex h-6 w-fit items-center gap-x-1.5 rounded bg-lime-700 px-2.5 dark:bg-gray-700 hover:bg-lime-600 dark:hover:bg-gray-600';
            return (
            <div class="relative group">
                {/* Tooltip for the skill description */}
                {description && (
                  <span class="absolute bottom-full left-1/2 -translate-x-1/2 -translate-y-2 bg-gray-800 text-white text-sm px-3 py-1 rounded opacity-0 transition-opacity duration-200 group-hover:opacity-100 max-w-xs w-max z-50 whitespace-normal">
                    {description}
                  </span>
                )}

                {/* Skill with icon */}
                <span class={`${className} text-white`}>
                  {icon && <Icon name={icon} color={iconColor} size={16} />}
                  {name}
                </span>
              </div>
            );
          })}
        </div>
      )}
    </div>
  ))}
</div>
